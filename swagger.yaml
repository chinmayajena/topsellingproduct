swagger: "2.0"
info:
  description: "This is a service which returns top selling products for a given product category"
  version: "1.0.0"
  title: "Top Selling Products"
  termsOfService: "http://xyz.io/terms/"
  contact:
    email: "apiteam@xyz.io"
  license:
    name: "xyz.io"
    url: "http://www.xyz.io/licenses/LICENSE-2.0.html"
host: "xyz.tsp.io"
basePath: "/v1"
tags:
  - name: "topselling"
    description: "Top selling product for a category"
    externalDocs:
      description: "Find out more"
      url: "http://productdoc.xyz.io"

schemes:
  - "https"
paths:
  /topselling/category/{categoryId}:
    get:
      tags:
        - "topselling"
      summary: " This API provides information about the top selling products in given category."
      description: "Returns a list of five products"
      operationId: "getProductsByCategoryId"
      produces:
        - "application/json"
      parameters:
        - name: "categoryId"
          in: "path"
          description: "ID of category to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TopFeed"
        "400":
          description: "Invalid Id supplied"
        "404":
          description: "category not found"
      security:
        - api_key: []

securityDefinitions:
  topfeed_auth:
    type: "oauth2"
    authorizationUrl: "https://login.microsoftonline.com/{tenantId}/oauth2/authorize"
    flow: "implicit"
    scopes:
      read:products: "read your products"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  TopFeed:
    type: "object"
    properties:
      requestId:
        type: "string"
        format: "uuid"
      categoryId:
        type: "integer"
        format: "int64"
      validTill:
        type: "string"
        format: "date-time"
      productList:
        type: "array"
        items:
          $ref: "#/definitions/Product"

  Product:
    type: "object"
    properties:
      sku:
        type: "string"
        format: "uuid"
      name:
        type: "string"
        example: "iphone"
      price:
        type: "number"
        format: "double"
      categories:
        type: "array"
        items:
          $ref: "#/definitions/Category"
      photoUrls:
        type: "array"
        xml:
          name: "photoUrl"
          wrapped: true
        items:
          type: "string"
      status:
        type: "string"
        description: "product status in the store"
        enum:
          - "instock"
          - "sold"

  Category:
    type: "object"
    properties:
      categoryId:
        type: "integer"
        format: "int64"
      categoryName:
        type: "string"
        example: "electronics"
